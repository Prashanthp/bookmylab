{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/reserve/reserve.component.css","webpack:///./src/app/reserve/reserve.component.html","webpack:///./src/app/reserve/reserve.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nimport { RegistrationComponent } from './registration/registration.component';\n\nimport { ReserveComponent } from './reserve/reserve.component';\n\nconst routes: Routes = [\n  {  path: '',  \n    component: HomeComponent  \n  },\n  {  \n    path: 'registration',  \n    component: RegistrationComponent  \n  },\n  {  \n    path: 'reserve',  \n    component: ReserveComponent  \n  },\n  {  \n    path: 'reserve/:id',  \n    component: ReserveComponent  \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { map } from 'rxjs/operators';\n//import { Observable } from 'rxjs/Rx';\nimport { faCoffee , faCheckSquare } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  faCoffee = faCoffee;\n  faCheckSquare = faCheckSquare;\n  constructor(){}\n\n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MalihuScrollbarModule } from 'ngx-malihu-scrollbar';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { TagInputModule } from 'ngx-chips';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent, myDirective } from './home/home.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ReserveComponent } from './reserve/reserve.component';\n\n//Service imports\nimport { DataService } from './data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    RegistrationComponent,\n    ReserveComponent,\n    myDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule.forRoot(),\n    MalihuScrollbarModule.forRoot(),\n    FormsModule,\n    FontAwesomeModule,\n    TagInputModule, \n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  \n  constructor() { }\n\n  //return lab data from DB\n  labs = [\n    'Raspberry Pi 3','Router','Alexa'\n  ];\n\n  //return hours for selected date from DB\n  hours = [\n    { hrs: '01:30 - 02:00', available: true},\n    { hrs: '02:00 - 02:30', available: true},\n    { hrs: '02:30 - 03:00', available: true},\n    { hrs: '03:00 - 03:30', available: false},\n    { hrs: '03:30 - 04:00', available: true},\n    { hrs: '04:00 - 04:30', available: false},\n    { hrs: '04:30 - 05:00', available: true},\n    { hrs: '05:00 - 05:30', available: true},\n    { hrs: '05:30 - 06:00', available: true},\n    { hrs: '06:00 - 06:30', available: false},\n    { hrs: '06:30 - 07:00', available: true},\n    { hrs: '07:00 - 07:30', available: true},\n    { hrs: '07:30 - 08:00', available: true},\n    { hrs: '08:00 - 08:30', available: false},\n    { hrs: '08:30 - 09:00', available: true},\n    { hrs: '09:00 - 09:30', available: true},\n    { hrs: '09:30 - 10:00', available: true},\n    ];\n\n  myData(){\n    return this.labs;\n  }\n\n  myHours(){\n    return this.hours;\n  }\n  \n}\n","module.exports = \".custom-jumbo{\\r\\n    background: #FFFFFF; \\r\\n    margin-top: 25px; \\r\\n    padding: 20px; \\r\\n    opacity: 0.9;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=”container”>     \\n    <div class=”template”>  \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"custom-jumbo\\\">\\n                    <form>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"labId\\\">Select Lab</label>\\n                            <select class=\\\"form-control\\\" id=\\\"labId\\\" [(ngModel)]=\\\"labId\\\" name=\\\"labId\\\" required>\\n                                <option *ngFor=\\\"let pow of myLabs\\\" [value]=\\\"pow\\\">{{pow}}</option>\\n                            </select>\\n                        </div>\\n                        <!-- <pre>Model: {{ myLabs.lab | json }}</pre>  -->\\n                    \\n                        <div class=\\\"form-group\\\" myHeader1>\\n                            <label for=\\\"attuid\\\" >Email</label>\\n                            <tag-input [(ngModel)]=\\\"attuid\\\" id=\\\"attuid\\\" name=\\\"attuid\\\" placeholder=\\\"Enter Email\\\">\\n                                <tag-input-dropdown [autocompleteObservable]='requestAutocompleteItems'></tag-input-dropdown>\\n                            </tag-input>\\n                        </div>              \\n                        \\n                        \\n                        \\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                                        name=\\\"d2\\\" #c2=\\\"ngModel\\\" [(ngModel)]=\\\"model2\\\" ngbDatepicker #d2=\\\"ngbDatepicker\\\" required>\\n                                <div class=\\\"input-group-append\\\">\\n                                <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d2.toggle()\\\" type=\\\"button\\\">\\n                                    <img src=\\\"./assets/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\"/>\\n                                </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <button class=\\\"btn btn-success btn-block reserve-btn\\\" type=\\\"button\\\" (click)=\\\"searchme()\\\">Search</button>\\n                        \\n                    </form> \\n                </div>>\\n                                         \\n            </div>\\n            <div class=\\\"col-md-3 pull-right\\\" *ngIf=\\\"showVar\\\" style=\\\"width:250px !important;\\\" [@slideInOut]=\\\"menuState\\\">\\n                <div class=\\\"custom-jumbo\\\">\\n                Select Time Range \\n                \\n                <hr>\\n                <div class=\\\"pull-right\\\" malihu-scrollbar [scrollbarOptions]=\\\"scrollbarOptions\\\" style=\\\"max-height: 300px;\\\">               \\n                  <!-- \\n                      <ul> \\n                        <li class=\\\"orange\\\"><a href=\\\"#\\\">Download</a></li>\\n                        <li class=\\\"blue\\\"><a href=\\\"#\\\">Download</a></li> \\n                        <li class=\\\"green\\\"><a href=\\\"#\\\">Download</a></li> \\n                        <li class=\\\"purple\\\"><a href=\\\"#\\\">Download</a></li> \\n                        <li class=\\\"gold\\\"><a href=\\\"#\\\">Download</a></li> \\n                    </ul>\\n                  -->\\n                  \\n                      <ul class=\\\"listUL\\\">\\n                       <!-- <div *ngFor=\\\"let hr of myHours\\\">\\n                            <li *ngIf=\\\"hr.available\\\" [ngClass]=\\\"{'listLI green':hr.available}\\\">\\n                                <a href=\\\"#\\\">\\n                                  <div class=\\\"pretty p-default p-round p-smooth p-success-o\\\">\\n                                      <input type=\\\"checkbox\\\"/>\\n                                      <div class=\\\"state p-success-o\\\">\\n                                          <label>{{ hr.hrs }} Available </label>\\n                                      </div>\\n                                  </div>\\n                                </a>\\n                              </li>\\n                              <li *ngIf=\\\"!hr.available\\\" [ngClass]=\\\"{'listLI orange':!hr.available}\\\">\\n                                  <a href=\\\"#\\\">\\n                                    <div class=\\\"pretty p-default p-round p-smooth p-danger-o\\\">\\n                                        <input type=\\\"checkbox\\\" disabled/>\\n                                        <div class=\\\"state p-danger-o\\\">\\n                                            <label>{{ hr.hrs }}  Reserved </label>\\n                                        </div>\\n                                    </div>\\n                                  </a>\\n                                </li>\\n                        </div>\\n                    -->\\n                    <div *ngFor=\\\"let hr of myHours;\\\">\\n                     \\n                        <li  class=\\\"listLI\\\">\\n                            <a href=\\\"#\\\">\\n                              <div class=\\\"pretty p-default p-round p-smooth\\\">\\n                                  <input type=\\\"checkbox\\\" (change)=\\\"onChangeCategory($event, hr)\\\"/>\\n                                                                        \\n                                  <div class=\\\"state\\\">\\n                                      <label>{{ hr }} Available </label>\\n                                  </div>\\n                              </div>\\n                            </a>\\n                        </li>\\n        \\n\\n                        \\n                    </div>\\n\\n\\n                      </ul>\\n\\n                </div>\\n                <hr>\\n                <button class=\\\"btn btn-success btn-block reserve-btn\\\" type=\\\"button\\\" (click)=\\\"reserve()\\\">Reserve Now</button>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-3 pull-right\\\" *ngIf=\\\"showSucc\\\" style=\\\"width:250px !important; height:100px !important; \\\">\\n            <div class=\\\"custom-jumbo\\\">\\n                {{ status }}                \\n                <hr>                \\n                \\n            </div>\\n        </div>\\n        </div>\\n     \\n    </div>  \\n</div>\"","import { Component, OnInit, Injectable, ElementRef } from '@angular/core';\nimport {NgbDateAdapter, NgbDateStruct, NgbDateNativeAdapter} from '@ng-bootstrap/ng-bootstrap';\nimport {Observable} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Http, Response } from '@angular/http';\nimport { DataService } from '../data.service';\nimport { DatePipe } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { faCheckCircle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport {trigger, state, style, animate, transition} from '@angular/animations';\nimport {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[myHeader1]'\n})\n\nexport class myDirective{\n  constructor(el: ElementRef){\n    el.nativeElement.backgroundColor = 'red';\n  }\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  providers:[DatePipe],\n  animations: [\n    trigger('slideInOut', [\n      state('in', style({\n        transform: 'translate3d(0, 0, 0)'\n      })),\n      state('out', style({\n        transform: 'translate3d(100%, 0, 0)'\n      })),\n      transition('in => out', animate('400ms ease-in-out')),\n      transition('out => in', animate('400ms ease-in-out'))\n    ]),\n  ]\n})\n\nexport class HomeComponent implements OnInit {\n  myLabs = [];\n  myHours = [];\n  showVar: boolean = false;\n  showSucc: boolean = false;\n  hrs: any;\n  selectedDate: any;\n  model2: any;\n  selectedHour: any = { \"hours\": [] };\n  userData: any = {\"users\" : []};\n  attuid:any;\n  labId: any;\n  faCheckCircle = faCheckCircle;\n  faCheck = faCheck;\n  status: any;\n  menuState:string = 'out';\n  private apiAllUrl: string = 'http://localhost:8080/api/';\n\n  public scrollbarOptions = { axis: 'y', theme: 'dark', scrollButtons: { enable: true } };\n  \n  constructor(private dataService:DataService,private http:Http, private formBuilder : FormBuilder) { }\n\n  ngOnInit() {\n    this.myLabs = this.dataService.myData();\n    this.myHours = this.dataService.myHours();\n  } \n\n  searchme(){\n    this.menuState = this.menuState === 'out' ? 'in' : 'out';\n    this.getHrs();  \n  }\n\n  getIndex(index) {\n    return index;\n  }\n  \n  reserve(){\n    this.saveLab();\n  }\n\n  getHrs() {\n    \n    console.log(this.labId);\n    this.selectedDate = this.model2.year+'-'+(\"0\" + (this.model2.month)).slice(-2)+'-'+(\"0\" + this.model2.day).slice(-2);\n\n    this.http.get(this.apiAllUrl+'availableHours?selectedDate='+this.selectedDate+'&labId='+this.labId)\n    .pipe(map((response: any) => response.json()))\n    .subscribe(\n      data => { \n              this.myHours = data.availableHours; \n              this.showVar = true;  \n              this.showSucc = false;\n      },\n      err => console.error(err),\n      () => console.log()\n    );\n  }\n\n  onChangeCategory(event, hr: any){ \n    \n    if(event.target.checked){      \n      this.selectedHour.hours.push(hr);\n    }else{\n      let index = this.selectedHour.hours.findIndex(x => x.value == hr)\n      this.selectedHour.hours.splice(index, 1); ;\n    }\n  }\n\n  saveLab() {\n    \n    this.selectedDate = this.model2.year+'-'+(\"0\" + (this.model2.month)).slice(-2)+'-'+(\"0\" + this.model2.day).slice(-2);\n    \n    for (let uid of this.attuid) {\n      this.userData.users.push(uid.value);\n    }\n    \n    \n    this.http.post(this.apiAllUrl+'reserve', {\n      lab: this.labId,\n      selectedDate:this.selectedDate,\n      selectedHour:this.selectedHour,\n      userData:this.userData\n    })\n      .subscribe(\n        res => {          \n          this.status = res.json().status +': '+ res.json().message;\n          this.showSucc = true;\n        },\n        err => {\n          console.log(\"Error occured\");\n        }\n      );\n   \n  }\n\n}\n\n\n@Component({\n  selector: 'ngbd-datepicker-adapter',\n  templateUrl: './home.component.html',\n  providers: [{provide: NgbDateAdapter, useClass: NgbDateNativeAdapter}]\n})\nexport class NgbdDatepickerAdapter {\n\n  get today() {\n    return new Date();\n  }\n}\n\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\\\" style=\\\"background: #000000;\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">BookMyLab</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" data-target=\\\"#navbarsExampleDefault\\\"\\n    aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home\\n\\n          <span class=\\\"sr-only\\\">(current)</span>\\n\\n        </a>\\n\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n\\n        <a class=\\\"nav-link\\\" routerLink=\\\"registration\\\">Schedule</a>\\n\\n      </li>\\n    \\n      <!--\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"reserve\\\">Schedule</a>\\n      </li>\\n      -->\\n    </ul>\\n\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n\\n    </form>\\n\\n  </div>\\n\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {    \n  }\n  isCollapsed: Boolean = true;\n  \n}\n","module.exports = \"table{\\r\\n    background: #FFFFFF;\\r\\n}\\r\\n\\r\\n.myEditForm{\\r\\n    background: #FFFFFF !important;\\r\\n    padding: 25px;\\r\\n}\"","module.exports = \"<div class=”container”>\\n  \\n  <div class=\\\"reglist\\\">\\n\\n    <table class=\\\"table table-striped\\\">\\n\\n      <thead>\\n\\n        <tr>\\n\\n          <th>#</th>\\n\\n          <th>Lab</th>\\n\\n          <th>Attendees email</th>\\n\\n          <th>Scheduled Date</th>\\n\\n          <th></th>\\n\\n          <th></th>\\n\\n        </tr>\\n\\n      </thead>\\n\\n      <tbody>\\n\\n        <tr *ngFor=\\\"let registration of registrations; let i = index\\\">\\n\\n          <th scope=\\\"row\\\">{{ i + 1 }}</th>\\n\\n          <td>{{ registration.labname }}</td>\\n\\n          <td>{{ registration.email }}</td>\\n\\n          <td>{{ registration.scheduleDate.day + '/' + registration.scheduleDate.month + '/' + registration.scheduleDate.year}}</td>\\n\\n          <td>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"onEdit(i)\\\">Edit</button>\\n\\n          </td>\\n\\n          <td>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onDelete(i)\\\">Delete</button>\\n\\n          </td>\\n\\n        </tr>\\n\\n      </tbody>\\n\\n    </table>\\n\\n    <div class=\\\"text-right\\\">\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onNew()\\\">New</button>\\n\\n    </div>\\n\\n  </div>\\n\\n  <br>\\n\\n  <div class=\\\"col-md-6 regentry myEditForm\\\" *ngIf=\\\"showNew\\\">\\n\\n    <form (ngSubmit)=\\\"onSave()\\\">\\n      <div class=\\\"form-group row\\\">\\n\\n        <label for=\\\"labname-input\\\" class=\\\"col-2 col-form-label\\\">Lab Name</label>\\n\\n        <div class=\\\"col-10\\\">\\n\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"regModel.labname\\\" name=\\\"labname\\\">\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n\\n        <label for=\\\"email-input\\\" class=\\\"col-2 col-form-label\\\">email</label>\\n\\n        <div class=\\\"col-10\\\">\\n\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"regModel.email\\\" name=\\\"email\\\">\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n\\n        <label for=\\\"scheduleDate-input\\\" class=\\\"col-2 col-form-label\\\">DOB</label>\\n\\n        <div class=\\\"col-3 input-group\\\">\\n\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"scheduleDate\\\" [(ngModel)]=\\\"regModel.scheduleDate\\\" ngbDatepicker #scheduleDate=\\\"ngbDatepicker\\\">\\n\\n          <button class=\\\"input-group-addon\\\" (click)=\\\"scheduleDate.toggle()\\\" type=\\\"button\\\">\\n\\n            <img src=\\\"./assets/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\n\\n          </button>\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">{{submitType}}</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nclass Registration {\n  constructor(\n    public labname: string = '',\n    public email: string = '',\n    public scheduleDate: NgbDateStruct = null,\n  ) { }\n}\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  // It maintains list of Registrations\n\n  registrations: Registration[] = [];\n\n  // It maintains registration Model\n\n  regModel: Registration;\n\n  // It maintains registration form display status. By default it will be false.\n\n  showNew: Boolean = false;\n\n  // It will be either 'Save' or 'Update' based on operation.\n\n  submitType: string = 'Save';\n\n  // It maintains table row index based on selection.\n\n  selectedRow: number;\n\n  // It maintains Array of countries.\n\n  Labs: string[] = [\n    'Raspberry Pi 3','Router','Alexa'\n  ];\n\n  constructor() {\n    // Add default registration data.\n\n    this.registrations.push(new Registration('Raspberry Pi 3', 'prashanth@gmail.com', { year: 2018, month: 5, day: 12 }));\n\n    this.registrations.push(new Registration('Router', 'prashanth@gmail.com', { year: 2018, month: 12, day: 3 }));\n\n    this.registrations.push(new Registration('Alexa', 'prashanth@gmail.com', { year: 2018, month: 7, day: 25 }));\n  }\n\n  ngOnInit() {\n  }\n\n  // This method associate to New Button.\n\n  onNew() {\n\n    // Initiate new registration.\n\n    this.regModel = new Registration();\n\n    // Change submitType to 'Save'.\n\n    this.submitType = 'Save';\n\n    // display registration entry section.\n\n    this.showNew = true;\n\n  }\n\n  // This method associate to Save Button.\n\n  onSave() {\n\n    if (this.submitType === 'Save') {\n\n      // Push registration model object into registration list.\n\n      this.registrations.push(this.regModel);\n\n    } else {\n\n      // Update the existing properties values based on model.\n\n      this.registrations[this.selectedRow].labname = this.regModel.labname;\n\n      this.registrations[this.selectedRow].email = this.regModel.email;\n\n      this.registrations[this.selectedRow].scheduleDate = this.regModel.scheduleDate;\n\n    }\n\n    // Hide registration entry section.\n\n    this.showNew = false;\n\n  }\n\n  // This method associate to Edit Button.\n\n  onEdit(index: number) {\n\n    // Assign selected table row index.\n\n    this.selectedRow = index;\n\n    // Initiate new registration.\n\n    this.regModel = new Registration();\n\n    // Retrieve selected registration from list and assign to model.\n\n    this.regModel = Object.assign({}, this.registrations[this.selectedRow]);\n\n    // Change submitType to Update.\n\n    this.submitType = 'Update';\n\n    // Display registration entry section.\n\n    this.showNew = true;\n\n  }\n\n  // This method associate to Delete Button.\n\n  onDelete(index: number) {\n\n    // Delete the corresponding registration entry from the list.\n\n    this.registrations.splice(index, 1);\n\n  }\n\n  // This method associate to Cancel Button.\n\n  onCancel() {\n\n    // Hide registration entry section.\n\n    this.showNew = false;\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=”container”>\\n\\n  <div class=”template”>\\n  \\n  <h1>Reserve you Lab here</h1>\\n  \\n  </div>\\n  \\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reserve',\n  templateUrl: './reserve.component.html',\n  styleUrls: ['./reserve.component.css']\n})\nexport class ReserveComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}